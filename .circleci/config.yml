version: 2.1
orbs:
  slack: circleci/slack@3.4.2

jobs:
  unit-helm2:
    docker:
      # This image is built from test/docker/Test.dockerfile
      - image: hashicorpdev/consul-helm-test:0.3.0

    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: bats ./test/unit
  unit-helm3:
    docker:
      - image: hashicorpdev/consul-helm-test:0.4.0

    steps:
      - checkout

      - run:
          name: Run Unit Tests
          command: bats ./test/unit

  acceptance:
    docker:
      # This image is build from test/docker/Test.dockerfile
      # version 0.4.0 uses helm v3 as default
      - image: hashicorpdev/consul-helm-test:0.4.0

    steps:
      - checkout

      - run:
          name: terraform init & apply
          command: |
            terraform init test/terraform
            echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file=-

            terraform apply -var project=${CLOUDSDK_CORE_PROJECT} -var init_cli=true -auto-approve test/terraform

      - run:
          name: Run acceptance tests
          command: bats ./test/acceptance

      - run:
          name: terraform destroy
          command: |
            terraform destroy -auto-approve
          when: always

  update-helm-charts-index:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run:
          name: verify Chart version matches tag version
          command: |
            GO111MODULE=on go get github.com/mikefarah/yq/v2
            git_tag=$(echo "${CIRCLE_TAG#v}")
            chart_tag=$(yq r Chart.yaml version)
            if [ "${git_tag}" != "${chart_tag}" ]; then
              echo "chart version (${chart_tag}) did not match git version (${git_tag})"
              exit 1
            fi
      - run:
          name: update helm-charts index
          command: |
            curl --show-error --silent --fail --user "${CIRCLE_TOKEN}:" \
                -X POST \
                -H 'Content-Type: application/json' \
                -H 'Accept: application/json' \
                -d "{\"branch\": \"master\",\"parameters\":{\"SOURCE_REPO\": \"${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\",\"SOURCE_TAG\": \"${CIRCLE_TAG}\"}}" \
                "${CIRCLE_ENDPOINT}/${CIRCLE_PROJECT}/pipeline"
      - slack/status:
          fail_only: true
          failure_message: "Failed to trigger an update to the helm charts index. Check the logs at: ${CIRCLE_BUILD_URL}"

workflows:
  version: 2
  test:
    jobs:
      - unit-helm2
      - unit-helm3
      - acceptance:
          requires:
            - unit-helm2
            - unit-helm3
          filters:
            branches:
              only: master
  update-helm-charts-index:
    jobs:
      - update-helm-charts-index:
          context: helm-charts-trigger
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
