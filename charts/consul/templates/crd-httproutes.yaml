{{- if .Values.connectInject.enabled }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: crd
  name: httproutes.mesh.consul.hashicorp.com
spec:
  group: mesh.consul.hashicorp.com
  names:
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    shortNames:
    - http-route
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2beta1
    schema:
      openAPIV3Schema:
        description: HTTPRoute is the Schema for the HTTP Route API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "NOTE: this should align to the GAMMA/gateway-api version,
              or at least be easily translatable. \n https://gateway-api.sigs.k8s.io/references/spec/#gateway.networking.k8s.io/v1alpha2.HTTPRoute
              \n This is a Resource type."
            properties:
              hostnames:
                description: "Hostnames are the hostnames for which this HTTPRoute
                  should respond to requests. \n This is only valid for north/south."
                items:
                  type: string
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Services)
                  that a Route wants to be attached to. \n It is invalid to reference
                  an identical parent more than once. It is valid to reference multiple
                  distinct sections within the same parent resource."
                items:
                  description: 'NOTE: roughly equivalent to structs.ResourceReference'
                  properties:
                    port:
                      description: For east/west this is the name of the Consul Service
                        port to direct traffic to or empty to imply all. For north/south
                        this is TBD.
                      type: string
                    ref:
                      description: For east/west configuration, this should point
                        to a Service. For north/south it should point to a Gateway.
                      properties:
                        name:
                          description: Name is the user-given name of the resource
                            (e.g. the "billing" service).
                          type: string
                        section:
                          description: Section identifies which part of the resource
                            the condition relates to.
                          type: string
                        tenancy:
                          description: Tenancy identifies the tenancy units (i.e.
                            partition, namespace) in which the resource resides.
                          properties:
                            namespace:
                              description: "Namespace further isolates resources within
                                a partition. https://developer.hashicorp.com/consul/docs/enterprise/namespaces
                                \n When using the List and WatchList endpoints, provide
                                the wildcard value \"*\" to list resources across
                                all namespaces."
                              type: string
                            partition:
                              description: "Partition is the topmost administrative
                                boundary within a cluster. https://developer.hashicorp.com/consul/docs/enterprise/admin-partitions
                                \n When using the List and WatchList endpoints, provide
                                the wildcard value \"*\" to list resources across
                                all partitions."
                              type: string
                            peerName:
                              description: "PeerName identifies which peer the resource
                                is imported from. https://developer.hashicorp.com/consul/docs/connect/cluster-peering
                                \n When using the List and WatchList endpoints, provide
                                the wildcard value \"*\" to list resources across
                                all peers."
                              type: string
                          type: object
                        type:
                          description: Type identifies the resource's type.
                          properties:
                            group:
                              description: Group describes the area of functionality
                                to which this resource type relates (e.g. "catalog",
                                "authorization").
                              type: string
                            groupVersion:
                              description: GroupVersion is incremented when sweeping
                                or backward-incompatible changes are made to the group's
                                resource types.
                              type: string
                            kind:
                              description: Kind identifies the specific resource type
                                within the group.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              rules:
                description: Rules are a list of HTTP-based routing rules that this
                  route should use for constructing a routing table.
                items:
                  description: HTTPRouteRule specifies the routing rules used to determine
                    what upstream service an HTTP request is routed to.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. \n Failure behavior here depends
                        on how many BackendRefs are specified and how many are invalid.
                        \n If all entries in BackendRefs are invalid, and there are
                        also no filters specified in this route rule, all traffic
                        which matches this rule MUST receive a 500 status code. \n
                        See the HTTPBackendRef definition for the rules about what
                        makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef
                        is invalid, 500 status codes MUST be returned for requests
                        that would have otherwise been routed to an invalid backend.
                        If multiple backends are specified, and some are invalid,
                        the proportion of requests that would otherwise have been
                        routed to an invalid backend MUST receive a 500 status code.
                        \n For example, if two backends are specified with equal weights,
                        and one is invalid, 50 percent of traffic must receive a 500.
                        Implementations may choose how that 50 percent is determined."
                      items:
                        properties:
                          backendRef:
                            properties:
                              datacenter:
                                type: string
                              port:
                                description: "For east/west this is the name of the
                                  Consul Service port to direct traffic to or empty
                                  to imply using the same value as the parent ref.
                                  \n For north/south this is TBD."
                                type: string
                              ref:
                                description: For east/west configuration, this should
                                  point to a Service.
                                properties:
                                  name:
                                    description: Name is the user-given name of the
                                      resource (e.g. the "billing" service).
                                    type: string
                                  section:
                                    description: Section identifies which part of
                                      the resource the condition relates to.
                                    type: string
                                  tenancy:
                                    description: Tenancy identifies the tenancy units
                                      (i.e. partition, namespace) in which the resource
                                      resides.
                                    properties:
                                      namespace:
                                        description: "Namespace further isolates resources
                                          within a partition. https://developer.hashicorp.com/consul/docs/enterprise/namespaces
                                          \n When using the List and WatchList endpoints,
                                          provide the wildcard value \"*\" to list
                                          resources across all namespaces."
                                        type: string
                                      partition:
                                        description: "Partition is the topmost administrative
                                          boundary within a cluster. https://developer.hashicorp.com/consul/docs/enterprise/admin-partitions
                                          \n When using the List and WatchList endpoints,
                                          provide the wildcard value \"*\" to list
                                          resources across all partitions."
                                        type: string
                                      peerName:
                                        description: "PeerName identifies which peer
                                          the resource is imported from. https://developer.hashicorp.com/consul/docs/connect/cluster-peering
                                          \n When using the List and WatchList endpoints,
                                          provide the wildcard value \"*\" to list
                                          resources across all peers."
                                        type: string
                                    type: object
                                  type:
                                    description: Type identifies the resource's type.
                                    properties:
                                      group:
                                        description: Group describes the area of functionality
                                          to which this resource type relates (e.g.
                                          "catalog", "authorization").
                                        type: string
                                      groupVersion:
                                        description: GroupVersion is incremented when
                                          sweeping or backward-incompatible changes
                                          are made to the group's resource types.
                                        type: string
                                      kind:
                                        description: Kind identifies the specific
                                          resource type within the group.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          filters:
                            description: Filters defined at this level should be executed
                              if and only if the request is being forwarded to the
                              backend defined here.
                            items:
                              properties:
                                requestHeaderModifier:
                                  description: RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers.
                                  properties:
                                    add:
                                      description: Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name.
                                      items:
                                        properties:
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                    remove:
                                      description: Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      description: Set overwrites the request with
                                        the given header (name, value) before the
                                        action.
                                      items:
                                        properties:
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                responseHeaderModifier:
                                  description: ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers.
                                  properties:
                                    add:
                                      description: Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name.
                                      items:
                                        properties:
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                    remove:
                                      description: Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      description: Set overwrites the request with
                                        the given header (name, value) before the
                                        action.
                                      items:
                                        properties:
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                urlRewrite:
                                  description: URLRewrite defines a schema for a filter
                                    that modifies a request during forwarding.
                                  properties:
                                    pathPrefix:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          weight:
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1."
                            format: int32
                            type: integer
                        type: object
                      type: array
                    filters:
                      items:
                        properties:
                          requestHeaderModifier:
                            description: RequestHeaderModifier defines a schema for
                              a filter that modifies request headers.
                            properties:
                              add:
                                description: Add adds the given header(s) (name, value)
                                  to the request before the action. It appends to
                                  any existing values associated with the header name.
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              remove:
                                description: Remove the given header(s) from the HTTP
                                  request before the action. The value of Remove is
                                  a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                items:
                                  type: string
                                type: array
                              set:
                                description: Set overwrites the request with the given
                                  header (name, value) before the action.
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          responseHeaderModifier:
                            description: ResponseHeaderModifier defines a schema for
                              a filter that modifies response headers.
                            properties:
                              add:
                                description: Add adds the given header(s) (name, value)
                                  to the request before the action. It appends to
                                  any existing values associated with the header name.
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              remove:
                                description: Remove the given header(s) from the HTTP
                                  request before the action. The value of Remove is
                                  a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                items:
                                  type: string
                                type: array
                              set:
                                description: Set overwrites the request with the given
                                  header (name, value) before the action.
                                items:
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          urlRewrite:
                            description: URLRewrite defines a schema for a filter
                              that modifies a request during forwarding.
                            properties:
                              pathPrefix:
                                type: string
                            type: object
                        type: object
                      type: array
                    matches:
                      items:
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              properties:
                                invert:
                                  description: 'NOTE: not in gamma; service-router
                                    compat'
                                  type: boolean
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, “foo” and “Foo” are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for “Set-Cookie”."
                                  type: string
                                type:
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - HEADER_MATCH_TYPE_UNSPECIFIED
                                  - HEADER_MATCH_TYPE_EXACT
                                  - HEADER_MATCH_TYPE_REGEX
                                  - HEADER_MATCH_TYPE_PRESENT
                                  - HEADER_MATCH_TYPE_PREFIX
                                  - HEADER_MATCH_TYPE_SUFFIX
                                  format: int32
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  type: string
                              type: object
                            type: array
                          method:
                            description: Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method.
                            type: string
                          path:
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the “/” path is provided.
                            properties:
                              type:
                                description: Type specifies how to match against the
                                  path Value.
                                enum:
                                - PATH_MATCH_TYPE_UNSPECIFIED
                                - PATH_MATCH_TYPE_EXACT
                                - PATH_MATCH_TYPE_PREFIX
                                - PATH_MATCH_TYPE_REGEX
                                format: int32
                                type: string
                              value:
                                description: Value of the HTTP path to match against.
                                type: string
                            type: object
                          queryParams:
                            description: QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route.
                            items:
                              properties:
                                name:
                                  description: "Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                    \n If multiple entries specify equivalent query
                                    param names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST
                                    be ignored. \n If a query param is repeated in
                                    an HTTP request, the behavior is purposely left
                                    undefined, since different data planes have different
                                    capabilities. However, it is recommended that
                                    implementations should match against the first
                                    value of the param if the data plane supports
                                    it, as this behavior is expected in other load
                                    balancing contexts outside of the Gateway API.
                                    \n Users SHOULD NOT route traffic based on repeated
                                    query params to guard themselves against potential
                                    differences in the implementations."
                                  type: string
                                type:
                                  description: Type specifies how to match against
                                    the value of the query parameter.
                                  enum:
                                  - QUERY_PARAM_MATCH_TYPE_UNSPECIFIED
                                  - QUERY_PARAM_MATCH_TYPE_EXACT
                                  - QUERY_PARAM_MATCH_TYPE_REGEX
                                  - QUERY_PARAM_MATCH_TYPE_PRESENT
                                  format: int32
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    retries:
                      properties:
                        number:
                          description: Number is the number of times to retry the
                            request when a retryable result occurs.
                          properties:
                            value:
                              description: The uint32 value.
                              format: int32
                              type: integer
                          type: object
                        onConditions:
                          description: RetryOn allows setting envoy specific conditions
                            when a request should be automatically retried.
                          items:
                            type: string
                          type: array
                        onConnectFailure:
                          description: RetryOnConnectFailure allows for connection
                            failure errors to trigger a retry.
                          type: boolean
                        onStatusCodes:
                          description: RetryOnStatusCodes is a flat list of http response
                            status codes that are eligible for retry. This again should
                            be feasible in any reasonable proxy.
                          items:
                            format: int32
                            type: integer
                          type: array
                      type: object
                    timeouts:
                      description: HTTPRouteTimeouts defines timeouts that can be
                        configured for an HTTPRoute or GRPCRoute.
                      properties:
                        idle:
                          description: Idle specifies the total amount of time permitted
                            for the request stream to be idle.
                          format: duration
                          properties:
                            nanos:
                              description: Signed fractions of a second at nanosecond
                                resolution of the span of time. Durations less than
                                one second are represented with a 0 `seconds` field
                                and a positive or negative `nanos` field. For durations
                                of one second or more, a non-zero value for the `nanos`
                                field must be of the same sign as the `seconds` field.
                                Must be from -999,999,999 to +999,999,999 inclusive.
                              format: int32
                              type: integer
                            seconds:
                              description: 'Signed seconds of the span of time. Must
                                be from -315,576,000,000 to +315,576,000,000 inclusive.
                                Note: these bounds are computed from: 60 sec/min *
                                60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                              format: int64
                              type: integer
                          type: object
                        request:
                          description: RequestTimeout is the total amount of time
                            permitted for the entire downstream request (and retries)
                            to be processed.
                          format: duration
                          properties:
                            nanos:
                              description: Signed fractions of a second at nanosecond
                                resolution of the span of time. Durations less than
                                one second are represented with a 0 `seconds` field
                                and a positive or negative `nanos` field. For durations
                                of one second or more, a non-zero value for the `nanos`
                                field must be of the same sign as the `seconds` field.
                                Must be from -999,999,999 to +999,999,999 inclusive.
                              format: int32
                              type: integer
                            seconds:
                              description: 'Signed seconds of the span of time. Must
                                be from -315,576,000,000 to +315,576,000,000 inclusive.
                                Note: these bounds are computed from: 60 sec/min *
                                60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                              format: int64
                              type: integer
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
