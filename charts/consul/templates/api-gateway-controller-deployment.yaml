{{- if .Values.apiGateway.enabled }}
{{- if not .Values.client.grpc }}{{ fail "client.grpc must be true for api gateway" }}{{ end }}
{{- if not .Values.apiGateway.image}}{{ fail "apiGateway.image must be set to enable api gateway" }}{{ end }}
{{- if and .Values.global.adminPartitions.enabled (not .Values.global.enableConsulNamespaces) }}{{ fail "global.enableConsulNamespaces must be true if global.adminPartitions.enabled=true" }}{{ end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "consul.fullname" . }}-api-gateway-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: api-gateway-controller
    {{- if .Values.global.extraLabels }}
      {{- toYaml .Values.global.extraLabels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.apiGateway.controller.replicas }}
  selector:
    matchLabels:
      app: {{ template "consul.name" . }}
      chart: {{ template "consul.chart" . }}
      release: {{ .Release.Name }}
      component: api-gateway-controller
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
        {{- if (and .Values.global.secretsBackend.vault.enabled .Values.global.tls.enabled) }}
        "vault.hashicorp.com/agent-init-first": "true"
        "vault.hashicorp.com/agent-inject": "true"
        "vault.hashicorp.com/role": {{ .Values.global.secretsBackend.vault.consulCARole }}
        "vault.hashicorp.com/agent-inject-secret-serverca.crt": {{ .Values.global.tls.caCert.secretName }}
        "vault.hashicorp.com/agent-inject-template-serverca.crt": {{ template "consul.serverTLSCATemplate" . }}
        {{- if .Values.global.secretsBackend.vault.agentAnnotations }}
        {{ tpl .Values.global.secretsBackend.vault.agentAnnotations . | nindent 8 | trim }}
        {{- end }}
        {{- if and .Values.global.secretsBackend.vault.ca.secretName .Values.global.secretsBackend.vault.ca.secretKey }}
        "vault.hashicorp.com/agent-extra-secret": "{{ .Values.global.secretsBackend.vault.ca.secretName }}"
        "vault.hashicorp.com/ca-cert": "/vault/custom/{{ .Values.global.secretsBackend.vault.ca.secretKey }}"
        {{- end }}
        {{- end }}
      labels:
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        release: {{ .Release.Name }}
        component: api-gateway-controller
        {{- if .Values.global.extraLabels }}
          {{- toYaml .Values.global.extraLabels | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "consul.fullname" . }}-api-gateway-controller
      containers:
      - name: api-gateway-controller
        image: {{ .Values.apiGateway.image }}
        ports:
        - containerPort: 9090
          name: sds
          protocol: TCP
        env:
        {{- if .Values.global.tls.enabled }}
        - name: CONSUL_CACERT
          value: /consul/tls/ca/tls.crt
        {{- end }}
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        {{- if .Values.global.acls.manageSystemACLs }}
        - name: CONSUL_HTTP_TOKEN_FILE
          value: "/consul/login/acl-token"
        {{- end }}
        - name: CONSUL_HTTP_ADDR
          {{- if .Values.global.tls.enabled }}
          value: https://$(HOST_IP):8501
          {{- else }}
          value: http://$(HOST_IP):8500
          {{- end }}
        command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-api-gateway server \
            -sds-server-host {{ template "consul.fullname" . }}-api-gateway-controller.{{ .Release.Namespace }}.svc \
            -k8s-namespace {{ .Release.Namespace }} \
            {{- if .Values.global.enableConsulNamespaces }}
            {{- if .Values.connectInject.consulNamespaces.consulDestinationNamespace }}
            -consul-destination-namespace={{ .Values.connectInject.consulNamespaces.consulDestinationNamespace }} \
            {{- end }}
            {{- if .Values.connectInject.consulNamespaces.mirroringK8S }}
            -mirroring-k8s=true \
            {{- if .Values.connectInject.consulNamespaces.mirroringK8SPrefix }}
            -mirroring-k8s-prefix={{ .Values.connectInject.consulNamespaces.mirroringK8SPrefix }} \
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if and .Values.global.federation.enabled .Values.global.federation.primaryDatacenter }}
            -primary-datacenter={{ .Values.global.federation.primaryDatacenter }} \
            {{- end }}
            -log-level {{ default .Values.global.logLevel .Values.apiGateway.logLevel }} \
            -log-json={{ .Values.global.logJSON }}
        volumeMounts:
        {{- if .Values.global.acls.manageSystemACLs }}
        - name: consul-bin
          mountPath: /consul-bin
        {{- end }}
        {{- if .Values.global.tls.enabled }}
        {{- if .Values.global.tls.enableAutoEncrypt }}
        - name: consul-auto-encrypt-ca-cert
        {{- else }}
        - name: consul-ca-cert
        {{- end }}
          mountPath: /consul/tls/ca
          readOnly: true
        {{- end }}
        - mountPath: /consul/login
          name: consul-data
          readOnly: true
        {{- if .Values.apiGateway.resources }}
        resources:
          {{- toYaml .Values.apiGateway.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.global.acls.manageSystemACLs }}
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/sh", "-ec", "/consul-bin/consul logout" ]
        {{- end }}
      volumes:
      {{- if .Values.global.acls.manageSystemACLs }}
      - name: consul-bin
        emptyDir: { }
      {{- end }}
      {{- if .Values.global.tls.enabled }}
      {{- if not (and .Values.externalServers.enabled .Values.externalServers.useSystemRoots) }}
      - name: consul-ca-cert
        secret:
          {{- if .Values.global.tls.caCert.secretName }}
          secretName: {{ .Values.global.tls.caCert.secretName }}
          {{- else }}
          secretName: {{ template "consul.fullname" . }}-ca-cert
          {{- end }}
          items:
          - key: {{ default "tls.crt" .Values.global.tls.caCert.secretKey }}
            path: tls.crt
      {{- end }}
      {{- if .Values.global.tls.enableAutoEncrypt }}
      - name: consul-auto-encrypt-ca-cert
        emptyDir:
          medium: "Memory"
      {{- end }}
      {{- end }}
      - name: consul-data
        emptyDir:
          medium: "Memory"
      {{- if or .Values.global.acls.manageSystemACLs (and .Values.global.tls.enabled .Values.global.tls.enableAutoEncrypt) }}
      initContainers:
      {{- if .Values.global.acls.manageSystemACLs }}
      - name: copy-consul-bin
        image: {{ .Values.global.image | quote }}
        command:
        - cp
        - /bin/consul
        - /consul-bin/consul
        volumeMounts:
        - name: consul-bin
          mountPath: /consul-bin
        {{- if .Values.apiGateway.initCopyConsulContainer }}
        {{- if .Values.apiGateway.initCopyConsulContainer.resources }}
        resources: {{ toYaml .Values.apiGateway.initCopyConsulContainer.resources | nindent 12 }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- if (and .Values.global.tls.enabled .Values.global.tls.enableAutoEncrypt) }}
      {{- include "consul.getAutoEncryptClientCA" . | nindent 6 }}
      {{- end }}
      {{- if .Values.global.acls.manageSystemACLs }}
      - name: api-gateway-controller-acl-init
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
          {{- if .Values.global.tls.enabled }}
        - name: CONSUL_CACERT
          value: /consul/tls/ca/tls.crt
          {{- end }}
        - name: CONSUL_HTTP_ADDR
          {{- if .Values.global.tls.enabled }}
          value: https://$(HOST_IP):8501
          {{- else }}
          value: http://$(HOST_IP):8500
          {{- end }}
        image: {{ .Values.global.imageK8S }}
        volumeMounts:
        - mountPath: /consul/login
          name: consul-data
          readOnly: false
        {{- if .Values.global.tls.enabled }}
        {{- if .Values.global.tls.enableAutoEncrypt }}
        - name: consul-auto-encrypt-ca-cert
        {{- else }}
        - name: consul-ca-cert
        {{- end }}
          mountPath: /consul/tls/ca
          readOnly: true
        {{- end }}
        command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s-control-plane acl-init \
            -component-name=api-gateway-controller \
            {{- if and .Values.global.federation.enabled .Values.global.federation.primaryDatacenter }}
            -acl-auth-method={{ template "consul.fullname" . }}-k8s-component-auth-method-{{ .Values.global.datacenter }} \
            -primary-datacenter={{ .Values.global.federation.primaryDatacenter }} \
            {{- else }}
            -acl-auth-method={{ template "consul.fullname" . }}-k8s-component-auth-method \
            {{- end }}
            {{- if .Values.global.adminPartitions.enabled }}
            -partition={{ .Values.global.adminPartitions.name }} \
            {{- end }}
            -consul-api-timeout={{ .Values.global.consulAPITimeout }} \
            -log-level={{ default .Values.global.logLevel .Values.apiGateway.logLevel }} \
            -log-json={{ .Values.global.logJSON }}
        resources:
          requests:
            memory: "25Mi"
            cpu: "50m"
          limits:
            memory: "25Mi"
            cpu: "50m"
      {{- end }}
      {{- end }}
      {{- if .Values.apiGateway.controller.priorityClassName }}
      priorityClassName: {{ .Values.apiGateway.controller.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.apiGateway.controller.nodeSelector }}
      nodeSelector:
        {{ tpl .Values.apiGateway.controller.nodeSelector . | indent 8 | trim }}
      {{- end }}
      {{- if .Values.apiGateway.controller.tolerations }}
      tolerations:
        {{ tpl .Values.apiGateway.controller.tolerations . | indent 8 | trim }}
      {{- end }}
{{- end }}
