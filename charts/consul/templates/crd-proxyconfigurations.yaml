{{- if .Values.connectInject.enabled }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: crd
  name: proxyconfigurations.mesh.consul.hashicorp.com
spec:
  group: mesh.consul.hashicorp.com
  names:
    kind: ProxyConfiguration
    listKind: ProxyConfigurationList
    plural: proxyconfigurations
    shortNames:
    - proxy-configuration
    singular: proxyconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2beta1
    schema:
      openAPIV3Schema:
        description: ProxyConfiguration is the Schema for the TCP Routes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: This is a Resource type.
            properties:
              bootstrapConfig:
                description: bootstrap_config is the configuration that requires proxies
                  to be restarted to be applied.
                properties:
                  dogstatsdUrl:
                    type: string
                  overrideJsonTpl:
                    type: string
                  prometheusBindAddr:
                    type: string
                  readyBindAddr:
                    type: string
                  staticClustersJson:
                    type: string
                  staticListenersJson:
                    type: string
                  statsBindAddr:
                    type: string
                  statsConfigJson:
                    type: string
                  statsFlushInterval:
                    type: string
                  statsSinksJson:
                    type: string
                  statsTags:
                    items:
                      type: string
                    type: array
                  statsdUrl:
                    type: string
                  telemetryCollectorBindSocketDir:
                    type: string
                  tracingConfigJson:
                    type: string
                type: object
              dynamicConfig:
                description: dynamic_config is the configuration that could be changed
                  dynamically (i.e. without needing restart).
                properties:
                  accessLogs:
                    description: AccessLogs configures the output and format of Envoy
                      access logs
                    properties:
                      disableListenerLogs:
                        description: DisableListenerLogs turns off just listener logs
                          for connections rejected by Envoy because they don't have
                          a matching listener filter.
                        type: boolean
                      enabled:
                        description: Enabled turns off all access logging
                        type: boolean
                      jsonFormat:
                        description: The presence of one format string or the other
                          implies the access log string encoding. Defining both is
                          invalid.
                        type: string
                      path:
                        description: Path is the output file to write logs
                        type: string
                      textFormat:
                        type: string
                      type:
                        description: 'Type selects the output for logs: "file", "stderr".
                          "stdout"'
                        enum:
                        - LOG_SINK_TYPE_DEFAULT
                        - LOG_SINK_TYPE_FILE
                        - LOG_SINK_TYPE_STDERR
                        - LOG_SINK_TYPE_STDOUT
                        format: int32
                        type: string
                    type: object
                  envoyExtensions:
                    items:
                      description: EnvoyExtension has configuration for an extension
                        that patches Envoy resources.
                      properties:
                        arguments:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        consulVersion:
                          type: string
                        envoyVersion:
                          type: string
                        name:
                          type: string
                        required:
                          type: boolean
                      type: object
                    type: array
                  exposeConfig:
                    properties:
                      exposePaths:
                        items:
                          properties:
                            listenerPort:
                              format: int32
                              type: integer
                            localPathPort:
                              format: int32
                              type: integer
                            path:
                              type: string
                            protocol:
                              enum:
                              - EXPOSE_PATH_PROTOCOL_HTTP
                              - EXPOSE_PATH_PROTOCOL_HTTP2
                              format: int32
                              type: string
                          type: object
                        type: array
                    type: object
                  inboundConnections:
                    description: inbound_connections configures inbound connections
                      to the proxy.
                    properties:
                      balanceInboundConnections:
                        enum:
                        - BALANCE_CONNECTIONS_DEFAULT
                        - BALANCE_CONNECTIONS_EXACT
                        format: int32
                        type: string
                      maxInboundConnections:
                        format: int64
                        type: integer
                    type: object
                  listenerTracingJson:
                    type: string
                  localClusterJson:
                    type: string
                  localConnection:
                    additionalProperties:
                      description: Referenced by ProxyConfiguration
                      properties:
                        connectTimeout:
                          description: "A Duration represents a signed, fixed-length
                            span of time represented as a count of seconds and fractions
                            of seconds at nanosecond resolution. It is independent
                            of any calendar and concepts like \"day\" or \"month\".
                            It is related to Timestamp in that the difference between
                            two Timestamp values is a Duration and it can be added
                            or subtracted from a Timestamp. Range is approximately
                            +-10,000 years. \n # Examples \n Example 1: Compute Duration
                            from two Timestamps in pseudo code. \n Timestamp start
                            = ...; Timestamp end = ...; Duration duration = ...; \n
                            duration.seconds = end.seconds - start.seconds; duration.nanos
                            = end.nanos - start.nanos; \n if (duration.seconds < 0
                            && duration.nanos > 0) { duration.seconds += 1; duration.nanos
                            -= 1000000000; } else if (duration.seconds > 0 && duration.nanos
                            < 0) { duration.seconds -= 1; duration.nanos += 1000000000;
                            } \n Example 2: Compute Timestamp from Timestamp + Duration
                            in pseudo code. \n Timestamp start = ...; Duration duration
                            = ...; Timestamp end = ...; \n end.seconds = start.seconds
                            + duration.seconds; end.nanos = start.nanos + duration.nanos;
                            \n if (end.nanos < 0) { end.seconds -= 1; end.nanos +=
                            1000000000; } else if (end.nanos >= 1000000000) { end.seconds
                            += 1; end.nanos -= 1000000000; } \n Example 3: Compute
                            Duration from datetime.timedelta in Python. \n td = datetime.timedelta(days=3,
                            minutes=10) duration = Duration() duration.FromTimedelta(td)
                            \n # JSON Mapping \n In JSON format, the Duration type
                            is encoded as a string rather than an object, where the
                            string ends in the suffix \"s\" (indicating seconds) and
                            is preceded by the number of seconds, with nanoseconds
                            expressed as fractional seconds. For example, 3 seconds
                            with 0 nanoseconds should be encoded in JSON format as
                            \"3s\", while 3 seconds and 1 nanosecond should be expressed
                            in JSON format as \"3.000000001s\", and 3 seconds and
                            1 microsecond should be expressed in JSON format as \"3.000001s\"."
                          format: duration
                          properties:
                            nanos:
                              description: Signed fractions of a second at nanosecond
                                resolution of the span of time. Durations less than
                                one second are represented with a 0 `seconds` field
                                and a positive or negative `nanos` field. For durations
                                of one second or more, a non-zero value for the `nanos`
                                field must be of the same sign as the `seconds` field.
                                Must be from -999,999,999 to +999,999,999 inclusive.
                              format: int32
                              type: integer
                            seconds:
                              description: 'Signed seconds of the span of time. Must
                                be from -315,576,000,000 to +315,576,000,000 inclusive.
                                Note: these bounds are computed from: 60 sec/min *
                                60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                              format: int64
                              type: integer
                          type: object
                        requestTimeout:
                          description: "A Duration represents a signed, fixed-length
                            span of time represented as a count of seconds and fractions
                            of seconds at nanosecond resolution. It is independent
                            of any calendar and concepts like \"day\" or \"month\".
                            It is related to Timestamp in that the difference between
                            two Timestamp values is a Duration and it can be added
                            or subtracted from a Timestamp. Range is approximately
                            +-10,000 years. \n # Examples \n Example 1: Compute Duration
                            from two Timestamps in pseudo code. \n Timestamp start
                            = ...; Timestamp end = ...; Duration duration = ...; \n
                            duration.seconds = end.seconds - start.seconds; duration.nanos
                            = end.nanos - start.nanos; \n if (duration.seconds < 0
                            && duration.nanos > 0) { duration.seconds += 1; duration.nanos
                            -= 1000000000; } else if (duration.seconds > 0 && duration.nanos
                            < 0) { duration.seconds -= 1; duration.nanos += 1000000000;
                            } \n Example 2: Compute Timestamp from Timestamp + Duration
                            in pseudo code. \n Timestamp start = ...; Duration duration
                            = ...; Timestamp end = ...; \n end.seconds = start.seconds
                            + duration.seconds; end.nanos = start.nanos + duration.nanos;
                            \n if (end.nanos < 0) { end.seconds -= 1; end.nanos +=
                            1000000000; } else if (end.nanos >= 1000000000) { end.seconds
                            += 1; end.nanos -= 1000000000; } \n Example 3: Compute
                            Duration from datetime.timedelta in Python. \n td = datetime.timedelta(days=3,
                            minutes=10) duration = Duration() duration.FromTimedelta(td)
                            \n # JSON Mapping \n In JSON format, the Duration type
                            is encoded as a string rather than an object, where the
                            string ends in the suffix \"s\" (indicating seconds) and
                            is preceded by the number of seconds, with nanoseconds
                            expressed as fractional seconds. For example, 3 seconds
                            with 0 nanoseconds should be encoded in JSON format as
                            \"3s\", while 3 seconds and 1 nanosecond should be expressed
                            in JSON format as \"3.000000001s\", and 3 seconds and
                            1 microsecond should be expressed in JSON format as \"3.000001s\"."
                          format: duration
                          properties:
                            nanos:
                              description: Signed fractions of a second at nanosecond
                                resolution of the span of time. Durations less than
                                one second are represented with a 0 `seconds` field
                                and a positive or negative `nanos` field. For durations
                                of one second or more, a non-zero value for the `nanos`
                                field must be of the same sign as the `seconds` field.
                                Must be from -999,999,999 to +999,999,999 inclusive.
                              format: int32
                              type: integer
                            seconds:
                              description: 'Signed seconds of the span of time. Must
                                be from -315,576,000,000 to +315,576,000,000 inclusive.
                                Note: these bounds are computed from: 60 sec/min *
                                60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                              format: int64
                              type: integer
                          type: object
                      type: object
                    description: local_connection is the configuration that should
                      be used to connect to the local application provided per-port.
                      The map keys should correspond to port names on the workload.
                    type: object
                  localWorkloadAddress:
                    description: "deprecated: local_workload_address, local_workload_port,
                      and local_workload_socket_path are deprecated and are only needed
                      for migration of existing resources. \n Deprecated: Marked as
                      deprecated in pbmesh/v2beta1/proxy_configuration.proto."
                    type: string
                  localWorkloadPort:
                    description: 'Deprecated: Marked as deprecated in pbmesh/v2beta1/proxy_configuration.proto.'
                    format: int32
                    type: integer
                  localWorkloadSocketPath:
                    description: 'Deprecated: Marked as deprecated in pbmesh/v2beta1/proxy_configuration.proto.'
                    type: string
                  meshGatewayMode:
                    enum:
                    - MESH_GATEWAY_MODE_UNSPECIFIED
                    - MESH_GATEWAY_MODE_NONE
                    - MESH_GATEWAY_MODE_LOCAL
                    - MESH_GATEWAY_MODE_REMOTE
                    format: int32
                    type: string
                  mode:
                    description: mode indicates the proxy's mode. This will default
                      to 'transparent'.
                    enum:
                    - PROXY_MODE_DEFAULT
                    - PROXY_MODE_TRANSPARENT
                    - PROXY_MODE_DIRECT
                    format: int32
                    type: string
                  mutualTlsMode:
                    enum:
                    - MUTUAL_TLS_MODE_DEFAULT
                    - MUTUAL_TLS_MODE_STRICT
                    - MUTUAL_TLS_MODE_PERMISSIVE
                    format: int32
                    type: string
                  publicListenerJson:
                    type: string
                  transparentProxy:
                    properties:
                      dialedDirectly:
                        description: dialed_directly indicates whether this proxy
                          should be dialed using original destination IP in the connection
                          rather than load balance between all endpoints.
                        type: boolean
                      outboundListenerPort:
                        description: outbound_listener_port is the port for the proxy's
                          outbound listener. This defaults to 15001.
                        format: int32
                        type: integer
                    type: object
                type: object
              opaqueConfig:
                description: "deprecated: prevent usage when using v2 APIs directly.
                  needed for backwards compatibility \n Deprecated: Marked as deprecated
                  in pbmesh/v2beta1/proxy_configuration.proto."
                type: object
                x-kubernetes-preserve-unknown-fields: true
              workloads:
                description: Selection of workloads this proxy configuration should
                  apply to. These can be prefixes or specific workload names.
                properties:
                  filter:
                    type: string
                  names:
                    items:
                      type: string
                    type: array
                  prefixes:
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
