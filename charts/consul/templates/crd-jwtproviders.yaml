{{- if .Values.connectInject.enabled }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: crd
  name: jwtproviders.consul.hashicorp.com
spec:
  group: consul.hashicorp.com
  names:
    kind: JWTProvider
    listKind: JWTProviderList
    plural: jwtproviders
    singular: jwtprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: JWTProvider is the Schema for the jwtproviders API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JWTProviderSpec defines the desired state of JWTProvider
            properties:
              audiences:
                description: Audiences is the set of audiences the JWT is allowed
                  to access. If specified, all JWTs verified with this provider must
                  address at least one of these to be considered valid.
                items:
                  type: string
                type: array
              cacheConfig:
                description: CacheConfig defines configuration for caching the validation
                  result for previously seen JWTs. Caching results can speed up verification
                  when individual tokens are expected to be handled multiple times.
                properties:
                  size:
                    description: "Size specifies the maximum number of JWT verification
                      results to cache. \n Defaults to 0, meaning that JWT caching
                      is disabled."
                    type: integer
                type: object
              clockSkewSeconds:
                description: "ClockSkewSeconds specifies the maximum allowable time
                  difference from clock skew when validating the \"exp\" (Expiration)
                  and \"nbf\" (Not Before) claims. \n Default value is 30 seconds."
                type: integer
              forwarding:
                description: Forwarding defines rules for forwarding verified JWTs
                  to the backend.
                properties:
                  headerName:
                    description: "HeaderName is a header name to use when forwarding
                      a verified JWT to the backend. The verified JWT could have been
                      extracted from any location (query param, header, or cookie).
                      \n The header value will be base64-URL-encoded, and will not
                      be padded unless PadForwardPayloadHeader is true."
                    type: string
                  padForwardPayloadHeader:
                    description: "PadForwardPayloadHeader determines whether padding
                      should be added to the base64 encoded token forwarded with ForwardPayloadHeader.
                      \n Default value is false."
                    type: boolean
                type: object
              issuer:
                description: Issuer is the entity that must have issued the JWT. This
                  value must match the "iss" claim of the token.
                type: string
              jsonWebKeySet:
                description: JSONWebKeySet defines a JSON Web Key Set, its location
                  on disk, or the means with which to fetch a key set from a remote
                  server.
                properties:
                  local:
                    description: Local specifies a local source for the key set.
                    properties:
                      filename:
                        description: Filename configures a location on disk where
                          the JWKS can be found. If specified, the file must be present
                          on the disk of ALL proxies with intentions referencing this
                          provider.
                        type: string
                      jwks:
                        description: JWKS contains a base64 encoded JWKS.
                        type: string
                    type: object
                  remote:
                    description: Remote specifies how to fetch a key set from a remote
                      server.
                    properties:
                      cacheDuration:
                        description: "CacheDuration is the duration after which cached
                          keys should be expired. \n Default value is 5 minutes."
                        type: string
                      fetchAsynchronously:
                        description: "FetchAsynchronously indicates that the JWKS
                          should be fetched when a client request arrives. Client
                          requests will be paused until the JWKS is fetched. If false,
                          the proxy listener will wait for the JWKS to be fetched
                          before being activated. \n Default value is false."
                        type: boolean
                      jwksCluster:
                        description: JWKSCluster defines how the specified Remote
                          JWKS URI is to be fetched.
                        properties:
                          connectTimeout:
                            description: The timeout for new network connections to
                              hosts in the cluster. If not set, a default value of
                              5s will be used.
                            type: string
                          discoveryType:
                            description: "DiscoveryType refers to the service discovery
                              type to use for resolving the cluster. \n This defaults
                              to STRICT_DNS. Other options include STATIC, LOGICAL_DNS,
                              EDS or ORIGINAL_DST."
                            type: string
                          tlsCertificates:
                            description: "TLSCertificates refers to the data containing
                              certificate authority certificates to use in verifying
                              a presented peer certificate. If not specified and a
                              peer certificate is presented it will not be verified.
                              \n Must be either CaCertificateProviderInstance or TrustedCA."
                            properties:
                              caCertificateProviderInstance:
                                description: CaCertificateProviderInstance Certificate
                                  provider instance for fetching TLS certificates.
                                properties:
                                  certificateName:
                                    description: "CertificateName is used to specify
                                      certificate instances or types. For example,
                                      \"ROOTCA\" to specify a root-certificate (validation
                                      context) or \"example.com\" to specify a certificate
                                      for a particular domain. \n The default value
                                      is the empty string."
                                    type: string
                                  instanceName:
                                    description: "InstanceName refers to the certificate
                                      provider instance name. \n The default value
                                      is \"default\"."
                                    type: string
                                type: object
                              trustedCA:
                                description: "TrustedCA defines TLS certificate data
                                  containing certificate authority certificates to
                                  use in verifying a presented peer certificate. \n
                                  Exactly one of Filename, EnvironmentVariable, InlineString
                                  or InlineBytes must be specified."
                                properties:
                                  environmentVariable:
                                    type: string
                                  filename:
                                    type: string
                                  inlineBytes:
                                    format: byte
                                    type: string
                                  inlineString:
                                    type: string
                                type: object
                            type: object
                        type: object
                      requestTimeoutMs:
                        description: RequestTimeoutMs is the number of milliseconds
                          to time out when making a request for the JWKS.
                        type: integer
                      retryPolicy:
                        description: "RetryPolicy defines a retry policy for fetching
                          JWKS. \n There is no retry by default."
                        properties:
                          numRetries:
                            description: "NumRetries is the number of times to retry
                              fetching the JWKS. The retry strategy uses jittered
                              exponential backoff with a base interval of 1s and max
                              of 10s. \n Default value is 0."
                            type: integer
                          retryPolicyBackOff:
                            description: "Retry's backoff policy. \n Defaults to Envoy's
                              backoff policy."
                            properties:
                              baseInterval:
                                description: "BaseInterval to be used for the next
                                  back off computation. \n The default value from
                                  envoy is 1s."
                                type: string
                              maxInterval:
                                description: "MaxInternal to be used to specify the
                                  maximum interval between retries. Optional but should
                                  be greater or equal to BaseInterval. \n Defaults
                                  to 10 times BaseInterval."
                                type: string
                            type: object
                        type: object
                      uri:
                        description: URI is the URI of the server to query for the
                          JWKS.
                        type: string
                    type: object
                type: object
              locations:
                description: 'Locations where the JWT will be present in requests.
                  Envoy will check all of these locations to extract a JWT. If no
                  locations are specified Envoy will default to: 1. Authorization
                  header with Bearer schema: "Authorization: Bearer <token>" 2. accessToken
                  query parameter.'
                items:
                  description: "JWTLocation is a location where the JWT could be present
                    in requests. \n Only one of Header, QueryParam, or Cookie can
                    be specified."
                  properties:
                    cookie:
                      description: Cookie defines how to extract a JWT from an HTTP
                        request cookie.
                      properties:
                        name:
                          description: Name is the name of the cookie containing the
                            token.
                          type: string
                      type: object
                    header:
                      description: Header defines how to extract a JWT from an HTTP
                        request header.
                      properties:
                        forward:
                          description: "Forward defines whether the header with the
                            JWT should be forwarded after the token has been verified.
                            If false, the header will not be forwarded to the backend.
                            \n Default value is false."
                          type: boolean
                        name:
                          description: Name is the name of the header containing the
                            token.
                          type: string
                        valuePrefix:
                          description: 'ValuePrefix is an optional prefix that precedes
                            the token in the header value. For example, "Bearer "
                            is a standard value prefix for a header named "Authorization",
                            but the prefix is not part of the token itself: "Authorization:
                            Bearer <token>"'
                          type: string
                      type: object
                    queryParam:
                      description: QueryParam defines how to extract a JWT from an
                        HTTP request query parameter.
                      properties:
                        name:
                          description: Name is the name of the query param containing
                            the token.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
