{{- if .Values.syncCatalog.cleanupNodeOnRemoval }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "consul.fullname" . }}-sync-catalog-cleanup-on-uninstall
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: sync-catalog-cleanup
    {{- if .Values.global.extraLabels }}
      {{- toYaml .Values.global.extraLabels | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: {{ template "consul.fullname" . }}-sync-catalog-cleanup-on-uninstall
      labels:
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        release: {{ .Release.Name }}
        component: sync-catalog-cleanup
        {{- if .Values.global.extraLabels }}
          {{- toYaml .Values.global.extraLabels | nindent 8 }}
        {{- end }}
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/mesh-inject": "false"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "consul.fullname" . }}-sync-catalog-cleanup
      containers:
      - name: sync-catalog-cleanup-job
        image: "{{ default .Values.global.imageK8S .Values.syncCatalog.image }}"
        {{ template "consul.imagePullPolicy" . }}
        {{- include "consul.restrictedSecurityContext" . | nindent 8 }}
        env:
        {{- include "consul.consulK8sConsulServerEnvVars" . | nindent 8 }}
        {{- if .Values.global.acls.manageSystemACLs }}
        - name: CONSUL_LOGIN_AUTH_METHOD
          {{- if and .Values.global.federation.enabled .Values.global.federation.primaryDatacenter .Values.global.enableConsulNamespaces }}
          value: {{ template "consul.fullname" . }}-k8s-component-auth-method-{{ .Values.global.datacenter }}
          {{- else }}
          value: {{ template "consul.fullname" . }}-k8s-component-auth-method
          {{- end }}
        - name: CONSUL_LOGIN_DATACENTER
          {{- if and .Values.global.federation.enabled .Values.global.federation.primaryDatacenter .Values.global.enableConsulNamespaces }}
          value: {{ .Values.global.federation.primaryDatacenter }}
          {{- else }}
          value: {{ .Values.global.datacenter }}
          {{- end }}
        - name: CONSUL_LOGIN_META
          value: "component=sync-catalog,pod=$(NAMESPACE)/$(POD_NAME)"
        {{- end }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if (and .Values.syncCatalog.aclSyncToken.secretName .Values.syncCatalog.aclSyncToken.secretKey) }}
        - name: CONSUL_ACL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.syncCatalog.aclSyncToken.secretName }}
              key: {{ .Values.syncCatalog.aclSyncToken.secretKey }}
        {{- end }}
        volumeMounts:
        {{- if .Values.global.tls.enabled }}
        {{- if not (or (and .Values.externalServers.enabled .Values.externalServers.useSystemRoots) .Values.global.secretsBackend.vault.enabled) }}
        - name: consul-ca-cert
          mountPath: /consul/tls/ca
          readOnly: true
        {{- end }}
        {{- end }}
        command:
        - "/bin/sh"
        - "-ec"
        - |
          exec consul-k8s-control-plane sync-catalog \
            -log-level={{ default .Values.global.logLevel .Values.syncCatalog.logLevel }} \
            -log-json={{ .Values.global.logJSON }} \
            -k8s-default-sync={{ .Values.syncCatalog.default }} \
            {{- if .Values.global.adminPartitions.enabled }}
            -partition={{ .Values.global.adminPartitions.name }} \
            {{- end }}
            {{- if .Values.syncCatalog.metrics.enabled | default .Values.global.metrics.enabled }}
            -enable-metrics \
            {{- end }}
            {{- if .Values.syncCatalog.metrics.path }}
            -metrics-path={{ .Values.syncCatalog.metrics.path }} \
            {{- end }}
            {{- if .Values.syncCatalog.metrics.port }}
            -metrics-port={{ .Values.syncCatalog.metrics.port }} \
            {{- end }}
            -prometheus-retention-time={{ .Values.global.metrics.agentMetricsRetentionTime }} \
            -purge-k8s-services-from-node
      {{- if .Values.global.acls.tolerations }}
      tolerations:
        {{ tpl .Values.global.acls.tolerations . | indent 8 | trim }}
      {{- end }}
      volumes:
      {{- if .Values.global.tls.enabled }}
      {{- if not (or (and .Values.externalServers.enabled .Values.externalServers.useSystemRoots) .Values.global.secretsBackend.vault.enabled) }}
      - name: consul-ca-cert
        secret:
          {{- if .Values.global.tls.caCert.secretName }}
          secretName: {{ .Values.global.tls.caCert.secretName }}
          {{- else }}
          secretName: {{ template "consul.fullname" . }}-ca-cert
          {{- end }}
          items:
          - key: {{ default "tls.crt" .Values.global.tls.caCert.secretKey }}
            path: tls.crt
      {{- end }}
      {{- end }}
{{- end }}
