name: test-and-build 
on:
  push:
    tags:
      - v*
    branches:
      - crt-build-and-tests 
  pull_request:

env:
  TEST_RESULTS: /tmp/test-results # path to where test results are saved
  CONSUL_VERSION: 1.11.2 # Consul's OSS version to use in tests
  CONSUL_ENT_VERSION: 1.11.2+ent # Consul's enterprise version to use in tests
  GOTESTSUM_VERSION: 1.6.4

jobs:
  validate-helm-gen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{inputs.go-version}}

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Validate helm gen 
        working-directory: hack/helm-reference-gen 
        run: |
          go run ./... -validate

  go-fmt-vet-helm-gen:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: hack/helm-reference-gen
      go-version: 1.17.2

  unit-helm-gen:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: hack/helm-reference-gen
      go-version: 1.17.2
    needs: [go-fmt-vet-helm-gen, validate-helm-gen]

  unit-test-helm-templates:
    runs-on: ubuntu-latest
    container: 
      image: docker.mirror.hashicorp.services/hashicorpdev/consul-helm-test:0.10.0
      options: --user root
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
   
      - name: Run Unit Tests
        working-directory: charts/consul
        run:  bats --jobs 4 ./test/unit
    needs: [unit-helm-gen]

  lint-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"

  go-fmt-vet-control-plane:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: control-plane
      go-version: 1.17.2

  test-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{inputs.go-version}}

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{env.GOTESTSUM_VERSION}}/gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          rm gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz

      - run: mkdir -p ${{env.TEST_RESULTS}}

      - name: Run go tests 
        working-directory: control-plane 
        run: |
            mkdir -p $HOME/bin
            wget https://releases.hashicorp.com/consul/${{env.CONSUL_VERSION}}/consul_${{env.CONSUL_VERSION}}_linux_amd64.zip && \
              unzip consul_${{env.CONSUL_VERSION}}_linux_amd64.zip -d $HOME/bin && \
              rm consul_${{env.CONSUL_VERSION}}_linux_amd64.zip
            chmod +x $HOME/bin/consul
            PACKAGE_NAMES=$(go list ./...)
            gotestsum --junitfile ${{env.TEST_RESULTS}}/gotestsum-report.xml -- -p 4 $PACKAGE_NAMES
    needs: [lint-control-plane, go-fmt-vet-control-plane]

  test-enterprise-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{inputs.go-version}}

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{env.GOTESTSUM_VERSION}}/gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          rm gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz

      - run: mkdir -p ${{env.TEST_RESULTS}}

      - name: Run go tests 
        working-directory: control-plane 
        run: |
            mkdir -p $HOME/bin
            wget https://releases.hashicorp.com/consul/${{env.CONSUL_ENT_VERSION}}/consul_${{env.CONSUL_ENT_VERSION}}_linux_amd64.zip && \
              unzip consul_${{env.CONSUL_ENT_VERSION}}_linux_amd64.zip -d $HOME/bin && \
              rm consul_${{env.CONSUL_ENT_VERSION}}_linux_amd64.zip
            chmod +x $HOME/bin/consul
            PACKAGE_NAMES=$(go list ./...)
            gotestsum --junitfile ${{env.TEST_RESULTS}}/gotestsum-report.xml -- -tags=enterprise -p 4 $PACKAGE_NAMES
    needs: [lint-control-plane, go-fmt-vet-control-plane]

  build-distros-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [test-control-plane, test-enterprise-control-plane]

  build-distros-arm-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [test-control-plane, test-enterprise-control-plane]

  build-distros-386:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [test-control-plane, test-enterprise-control-plane]

  go-fmt-vet-acceptance:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory:  acceptance 
      go-version: 1.17.2

  unit-acceptance-framework:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: acceptance/framework
      go-version: 1.17.2
    needs: go-fmt-vet-acceptance

  go-fmt-vet-cli:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: cli 
      go-version: 1.17.2

  unit-cli:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: cli 
      go-version: 1.17.2
    needs: go-fmt-vet-cli

  dev-upload-docker:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: build-distros-amd64

  acceptance-tproxy:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [unit-cli, dev-upload-docker, unit-acceptance-framework, unit-test-helm-templates]

  acceptance:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [unit-cli, dev-upload-docker, unit-acceptance-framework, unit-test-helm-templates]










