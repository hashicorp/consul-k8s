name: test-and-build 
on:
  push:
    tags:
      - v*
    branches:
      - crt-build-and-tests 
  pull_request:

env:
  TEST_RESULTS: /tmp/test-results # path to where test results are saved
  CONSUL_VERSION: 1.11.2 # Consul's OSS version to use in tests
  CONSUL_ENT_VERSION: 1.11.2+ent # Consul's enterprise version to use in tests
  GOTESTSUM_VERSION: 1.6.4

# TODO: upload tests somewhere. An artifact?
# TODO: prevent running some things on forks?
# TODO: fix caching. Maybe cache on the first job

jobs:
  validate-helm-gen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Validate helm gen 
        working-directory: hack/helm-reference-gen 
        run: |
          go run ./... -validate

  go-fmt-vet-helm-gen:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: hack/helm-reference-gen
      go-version: 1.17.2

  unit-helm-gen:
    needs: [go-fmt-vet-helm-gen, validate-helm-gen]
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: hack/helm-reference-gen
      go-version: 1.17.2

  unit-test-helm-templates:
    needs: [unit-helm-gen]
    runs-on: ubuntu-latest
    container: 
      image: docker.mirror.hashicorp.services/hashicorpdev/consul-helm-test:0.10.0
      options: --user root
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
   
      - name: Run Unit Tests
        working-directory: charts/consul
        run:  bats --jobs 4 ./test/unit

  lint-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"

  go-fmt-vet-control-plane:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: control-plane
      go-version: 1.17.2

  test-control-plane:
    needs: [lint-control-plane, go-fmt-vet-control-plane]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{env.GOTESTSUM_VERSION}}/gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          rm gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz

      - run:  mkdir -p ${{env.TEST_RESULTS}}
      - run:  echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run go tests 
        working-directory: control-plane 
        run: |
            mkdir -p $HOME/bin
            wget https://releases.hashicorp.com/consul/${{env.CONSUL_VERSION}}/consul_${{env.CONSUL_VERSION}}_linux_amd64.zip && \
              unzip consul_${{env.CONSUL_VERSION}}_linux_amd64.zip -d $HOME/bin && \
              rm consul_${{env.CONSUL_VERSION}}_linux_amd64.zip
            chmod +x $HOME/bin/consul
            PACKAGE_NAMES=$(go list ./...)
            gotestsum --junitfile ${{env.TEST_RESULTS}}/gotestsum-report.xml -- -p 4 $PACKAGE_NAMES

  test-enterprise-control-plane:
    needs: [lint-control-plane, go-fmt-vet-control-plane]
    runs-on: ubuntu-latest
    env:
      CONSUL_LICENSE: ${{secrets.CONSUL_LICENSE}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{env.GOTESTSUM_VERSION}}/gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz
          rm gotestsum_${{env.GOTESTSUM_VERSION}}_linux_amd64.tar.gz

      - run:  mkdir -p ${{env.TEST_RESULTS}}
      - run:  echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run go tests 
        working-directory: control-plane 
        run: |
            mkdir -p $HOME/bin
            wget https://releases.hashicorp.com/consul/${{env.CONSUL_ENT_VERSION}}/consul_${{env.CONSUL_ENT_VERSION}}_linux_amd64.zip && \
              unzip consul_${{env.CONSUL_ENT_VERSION}}_linux_amd64.zip -d $HOME/bin && \
              rm consul_${{env.CONSUL_ENT_VERSION}}_linux_amd64.zip
            chmod +x $HOME/bin/consul
            PACKAGE_NAMES=$(go list ./...)
            gotestsum --junitfile ${{env.TEST_RESULTS}}/gotestsum-report.xml -- -tags=enterprise -p 4 $PACKAGE_NAMES

  build-distros:
   #needs: [test-control-plane, test-enterprise-control-plane]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {go: "1.17.2", goos: "linux", goarch: "386"}
          - {go: "1.17.5", goos: "linux", goarch: "amd64"}
          - {go: "1.17.5", goos: "linux", goarch: "arm"}
          - {go: "1.17.5", goos: "linux", goarch: "arm64"}
      fail-fast: true

    name: Go ${{ matrix.go }} ${{ matrix.goos }} ${{ matrix.goarch }} build
    steps:
      - uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Build
        working-directory: control-plane
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          XC_OS=${{ matrix.goos }} XC_ARCH=${{ matrix.goarch }} ./build-support/scripts/build-local.sh
          zip -r -j consul-k8s_${{ matrix.goos }}_${{ matrix.goarch }}.zip bin

      - uses: actions/upload-artifact@v2
        with:
          name: consul-k8s_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: control-plane/consul-k8s_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  go-fmt-vet-acceptance:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory:  acceptance 
      go-version: 1.17.2

  unit-acceptance-framework:
    needs: go-fmt-vet-acceptance
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: acceptance/framework
      go-version: 1.17.2

  go-fmt-vet-cli:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: cli 
      go-version: 1.17.2

  unit-cli:
    needs: go-fmt-vet-cli
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: cli 
      go-version: 1.17.2

  dev-upload-docker:
    needs: build-distros
    runs-on: ubuntu-latest

    env: 
      GITHUB_PULL_REQUEST: ${{github.event.pull_request.number}}
    steps:
      - uses: actions/checkout@v2

      - run: mkdir -p control-plane/pkg/bin/linux_amd64

      - uses: actions/download-artifact@v3
        with:
          name: consul-k8s_linux_amd64.zip
          path: control-plane

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Docker build 
        working-directory: control-plane
        run: |
          unzip consul-k8s_linux_amd64.zip -d ./pkg/bin/linux_amd64
          make ci.dev-docker

  acceptance-tproxy:
    needs: [unit-cli, dev-upload-docker, unit-acceptance-framework, unit-test-helm-templates]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          version: 1.22.4

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go mod download
        working-directory: acceptance
        run: go mod download

      - run:  mkdir -p ${{env.TEST_RESULTS}}

        #      - name: Run acceptance tests
        

  acceptance:
    needs: [unit-cli, dev-upload-docker, unit-acceptance-framework, unit-test-helm-templates]
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
