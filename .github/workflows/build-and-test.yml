name: test-and-build 
on:
  push:
    tags:
      - v*
    branches:
      - crt-build-and-tests 
  pull_request:

env:
  CONTROL_PLANE_PATH: control-plane
  CLI_PATH: cli
  ACCEPTANCE_MOD_PATH: acceptance
  ACCEPTANCE_TEST_PATH: acceptance/tests
  ACCEPTANCE_FRAMEWORK_PATH: acceptance/framework
  CHARTS_CONSUL_PATH: charts/consul
  HELM_GEN_PATH: hack/helm-reference-gen
  TEST_RESULTS: /tmp/test-results # path to where test results are saved
  CONSUL_VERSION: 1.11.2 # Consul's OSS version to use in tests
  CONSUL_ENT_VERSION: 1.11.2+ent # Consul's enterprise version to use in tests
  GO_VERSION: 1.17.2 # Controls what golang version to use. Passed in as a variable to reusable workflows

jobs:
  validate-helm-gen:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"

  go-fmt-vet-helm-gen:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: ${{env.HELM_GEN_PATH}}
      go-version: ${{env.GO_VERSION}}

  unit-helm-gen:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: ${{env.HELM_GEN_PATH}}
      go-version: ${{env.GO_VERSION}}
    needs: [go-fmt-vet-helm-gen, validate-helm-gen]

  unit-test-helm-template:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [unit-helm-gen]

  lint-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"

  go-fmt-vet-control-plane:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: ${{env.CONTROL_PLANE_PATH}}
      go-version: ${{env.GO_VERSION}}

  test-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [lint-control-plane, go-fmt-vet-control-plane]

  test-enterprise-control-plane:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [lint-control-plane, go-fmt-vet-control-plane]

  build-distros-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [test-control-plane, test-enterprise-control-plane]

  build-distros-arm-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [test-control-plane, test-enterprise-control-plane]

  build-distros-386:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [test-control-plane, test-enterprise-control-plane]

  go-fmt-vet-acceptance:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: ${{env.ACCEPTANCE_MOD_PATH}}
      go-version: ${{env.GO_VERSION}}

  unit-acceptance-framework:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: ${{env.ACCEPTANCE_FRAMEWORK_PATH}}
      go-version: ${{env.GO_VERSION}}
    needs: go-fmt-vet-acceptance

  go-fmt-vet-cli:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-go-fmt-vet.yml@crt-build-and-tests
    with:
      directory: ${{env.CLI_PATH}}
      go-version: ${{env.GO_VERSION}}

  unit-cli:
    uses: hashicorp/consul-k8s/.github/workflows/reusable-unit.yml@crt-build-and-tests
    with:
      directory: ${{env.CLI_PATH}}
      go-version: ${{env.GO_VERSION}}
    needs: go-fmt-vet-cli

  dev-upload-docker:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: build-distros-amd64

  acceptance-tproxy:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [unit-cli, dev-upload-docker, unit-acceptance-framework, unit-test-helm-template]

  acceptance:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run:
         echo "Filler"
    needs: [unit-cli, dev-upload-docker, unit-acceptance-framework, unit-test-helm-template]










