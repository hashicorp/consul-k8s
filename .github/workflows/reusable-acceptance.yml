name: reusable-acceptance

on:
  workflow_call:
    inputs:
      additional-flags:
        required: false
        type: string
        default: ""
      consul-k8s-image:
        required: false 
        type: string
        default: docker.mirror.hashicorp.services/hashicorpdev/consul-k8s-control-plane:latest
      directory:
        required: true
        type: string
      go-version:
        required: true
        type: string

# Environment variables can only be used at the step level
env:
  TEST_RESULTS: /tmp/test-results # path to where test results are saved
  GOTESTSUM_VERSION: 1.6.4

jobs:
  a:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: # I am really sorry for this but I could not find a way to automatically split our tests into several runners. For now, split manually.
          - {runner: "1", test-packages: "basic cli connect consul-dns controller example"}
          - {runner: "2", test-packages: "fixtures ingress-gateway mesh-gateway metrics"}
          - {runner: "3", test-packages: "partitions sync terminating-gateway vault"}
      fail-fast: true

    steps:      
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.go-version }}

      - name: Setup go mod cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install gotestsum
        run: |
          wget https://github.com/gotestyourself/gotestsum/releases/download/v${{ env.GOTESTSUM_VERSION }}/gotestsum_${{ env.GOTESTSUM_VERSION }}_linux_amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf gotestsum_${{ env.GOTESTSUM_VERSION }}_linux_amd64.tar.gz
          rm gotestsum_${{ env.GOTESTSUM_VERSION }}_linux_amd64.tar.gz

      - run: mkdir -p ${{ env.TEST_RESULTS }}

      - name: go mod download
        working-directory: ${{ inputs.directory }}
        run: go mod download
          
      # We have to run the tests for each package separately so that we can
      # exit early if any test fails (-failfast only works within a single
      # package).
# TODO: do not run on forks
      - name: Run acceptance tests ${{ matrix.runner }}
        working-directory: ${{ inputs.directory }}
        run: |
          exit_code=0
          echo "Running packages: ${{ matrix.test-packages }}"
          for pkg in $(echo ${{ matrix.test-packages }})
          do
            echo "Testing package: ${pkg}"
            if ! gotestsum --no-summary=all --jsonfile=jsonfile-${pkg////-} -- $pkg -p 1 -timeout 2h -failfast \
              ${{ inputs.additional-flags }} \
              -enable-enterprise \
              -enable-multi-cluster \
              -debug-directory=${{ env.TEST_RESULTS }}/debug \
              -consul-k8s-image=${{ inputs.consul-k8s-image }} 
            then
              echo "Tests in ${pkg} failed, aborting early"
              exit_code=1
              break
            fi
          done
          #          gotestsum --raw-command --junitfile "${{ env.TEST_RESULTS }}/gotestsum-report.xml" -- cat jsonfile*
          exit $exit_code

