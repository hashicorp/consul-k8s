{{- if (or (and (ne (.Values.server.enabled | toString) "-") .Values.server.enabled) (and (eq (.Values.server.enabled | toString) "-") .Values.global.enabled)) }}
{{- if .Values.global.bootstrapACLs }}
{{- /* We don't render this job when server.updatePartition > 0 because that
    means a server rollout is in progress and this job won't complete unless
    the rollout is finished (which won't happen until the partition is 0).
    If we ran it in this case, then the job would not complete which would cause
    the server-acl-init-cleanup hook to run indefinitely which would cause the
    helm upgrade command to hang.
*/ -}}
{{- if eq (int .Values.server.updatePartition) 0 }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "consul.fullname" . }}-server-acl-init
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  template:
    metadata:
      name: {{ template "consul.fullname" . }}-server-acl-init
      labels:
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        release: {{ .Release.Name }}
        component: server-acl-init
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "consul.fullname" . }}-server-acl-init
      {{- if .Values.global.tls.enabled }}
      volumes:
      - name: tls-ca-cert
        secret:
          secretName: {{ template "consul.fullname" . }}-ca-cert
      {{- end }}
      containers:
        - name: post-install-job
          image: {{ .Values.global.imageK8S }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- if .Values.global.tls.enabled }}
          volumeMounts:
            - name: tls-ca-cert
              mountPath: /consul/tls/ca
              readOnly: true
           {{- end }}
          command:
            - "/bin/sh"
            - "-ec"
            - |
              consul-k8s server-acl-init \
                -server-label-selector=component=server,app={{ template "consul.name" . }},release={{ .Release.Name }} \
                -resource-prefix={{ template "consul.fullname" . }} \
                -k8s-namespace={{ .Release.Namespace }} \
                {{- if .Values.global.tls.enabled }}
                -use-https \
                -consul-ca-cert=/consul/tls/ca/tls.crt \
                -consul-tls-server-name=server.{{ .Values.global.datacenter }}.{{ .Values.global.domain }} \
                {{- end }}
                {{- if .Values.syncCatalog.enabled }}
                -create-sync-token=true \
                {{- end }}
                {{- if (or (and (ne (.Values.dns.enabled | toString) "-") .Values.dns.enabled) (and (eq (.Values.dns.enabled | toString) "-") .Values.global.enabled)) }}
                -allow-dns=true \
                {{- end }}
                {{- if .Values.connectInject.enabled }}
                -create-inject-token=true \
                {{- end }}
                {{- if .Values.meshGateway.enabled }}
                -create-mesh-gateway-token=true \
                {{- end }}
                {{- if .Values.connectInject.aclBindingRuleSelector }}
                -acl-binding-rule-selector={{ .Values.connectInject.aclBindingRuleSelector }} \
                {{- end }}
                {{- if (and .Values.server.enterpriseLicense.secretName .Values.server.enterpriseLicense.secretKey) }}
                -create-enterprise-license-token=true \
                {{- end }}
                {{- if .Values.client.snapshotAgent.enabled }}
                -create-snapshot-agent-token=true \
                {{- end }}
                {{- if not (or (and (ne (.Values.client.enabled | toString) "-") .Values.client.enabled) (and (eq (.Values.client.enabled | toString) "-") .Values.global.enabled)) }}
                -create-client-token=false \
                {{- end }}
                -expected-replicas={{ .Values.server.replicas }}
{{- end }}
{{- end }}
{{- end }}
