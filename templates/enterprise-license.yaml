{{- if (or (and (ne (.Values.server.enabled | toString) "-") .Values.server.enabled) (and (eq (.Values.server.enabled | toString) "-") .Values.global.enabled)) }}
{{- if (and .Values.server.enterpriseLicense.secretName .Values.server.enterpriseLicense.secretKey) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "consul.fullname" . }}-license
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "100"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ template "consul.fullname" . }}-license
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        release: {{ .Release.Name }}
        component: license
    spec:
      restartPolicy: Never
      {{- if .Values.global.bootstrapACLs }}
      serviceAccountName: {{ template "consul.fullname" . }}-enterprise-license
      {{- end }}
      containers:
        - name: apply-enterprise-license
          image: "{{ default .Values.global.image .Values.server.image }}"
          env:
            - name: ENTERPRISE_LICENSE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.enterpriseLicense.secretName }}
                  key: {{ .Values.server.enterpriseLicense.secretKey }}
            - name: CONSUL_HTTP_ADDR
              value: http://{{ template "consul.fullname" . }}-server:8500
            {{- if .Values.global.bootstrapACLs }}
            - name: CONSUL_HTTP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-consul-enterprise-license-acl-token"
                  key: "token"
            {{- end}}
          command: 
            - "/bin/sh"
            - "-ec"
            - |
              consul license put "${ENTERPRISE_LICENSE}"
      {{- if .Values.global.bootstrapACLs }}
      initContainers:
      - name: ent-license-acl-init
        image: {{ .Values.global.imageK8S }}
        command:
          - "/bin/sh"
          - "-ec"
          - |
            consul-k8s acl-init \
              -secret-name="{{ .Release.Name }}-consul-enterprise-license-acl-token" \
              -k8s-namespace={{ .Release.Namespace }} \
              -init-type="sync"
      {{- end }}
{{- end }}
{{- end }}
